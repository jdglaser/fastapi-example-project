{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Intro Introduction This project can be used as a template/guide to for creating a REST API using the FastAPI framework. Checkout the project code: https://github.com/jdglaser/fastapi-example-project Features PostgresSQL for database Asynchronous database connections with Databases Database migrations with Alembic SQLAlchemy Core 2.0 for database interaction JWT Auth with refresh tokens, implemented using FastAPIs built-in security features Pipenv for project dependency management Project layout app/ # All application code alembic/ # Alembic configuration and versions database/ # Database related code repos/ # Database repository definitions tables/ # SQLAlchemy core table definitions database.py # Contains database object and SQLAlchemy metadata object models/ # Pydantic model definitions routes/ # Individual FastAPI routes util/ # Utility functions and classes scripts/ # Helpful shell scripts tests/ # Application tests docker-compose.yml # Defines database and app services for local development Dockerfile # Dockerfile to build app","title":"Intro"},{"location":"#intro","text":"","title":"Intro"},{"location":"#introduction","text":"This project can be used as a template/guide to for creating a REST API using the FastAPI framework. Checkout the project code: https://github.com/jdglaser/fastapi-example-project","title":"Introduction"},{"location":"#features","text":"PostgresSQL for database Asynchronous database connections with Databases Database migrations with Alembic SQLAlchemy Core 2.0 for database interaction JWT Auth with refresh tokens, implemented using FastAPIs built-in security features Pipenv for project dependency management","title":"Features"},{"location":"#project-layout","text":"app/ # All application code alembic/ # Alembic configuration and versions database/ # Database related code repos/ # Database repository definitions tables/ # SQLAlchemy core table definitions database.py # Contains database object and SQLAlchemy metadata object models/ # Pydantic model definitions routes/ # Individual FastAPI routes util/ # Utility functions and classes scripts/ # Helpful shell scripts tests/ # Application tests docker-compose.yml # Defines database and app services for local development Dockerfile # Dockerfile to build app","title":"Project layout"},{"location":"auth/intro/","text":"Auth - Intro TODO: Auth stuff","title":"Auth - Intro"},{"location":"auth/intro/#auth-intro","text":"TODO: Auth stuff","title":"Auth - Intro"},{"location":"database/connections/","text":"Connections and AsyncIO TODO: Connection stuff","title":"Connections and AsyncIO"},{"location":"database/connections/#connections-and-asyncio","text":"TODO: Connection stuff","title":"Connections and AsyncIO"},{"location":"database/dml/","text":"DML TODO: DML","title":"DML"},{"location":"database/dml/#dml","text":"TODO: DML","title":"DML"},{"location":"database/intro/","text":"Database Intro TODO: database stuff","title":"Database - Intro"},{"location":"database/intro/#database-intro","text":"TODO: database stuff","title":"Database Intro"},{"location":"database/migrations/","text":"Migrations TODO: Migrations","title":"Migrations"},{"location":"database/migrations/#migrations","text":"TODO: Migrations","title":"Migrations"}]}